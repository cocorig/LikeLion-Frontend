//함수 설명
//견물올리기를 할 예정입니다.


//땅다지기()
//말뚝세유기()
//기초콘크리트()
//철근바인딩()
//기둥세우기()
//외벽내벽올리기()
//지붕올리기()



//1번째 장점(아키텍처를 파악하기 용이)
//이 코드를 보고 건물올리기를 한다는 것을 알 수 있습니다.

//2번째 장점(기둥에 문제가 생기면 기둥세우기()함수로 가면 됩니다.구분이 되어있기 때문에)


//3번째 장점
//재사용성이 높습니다. 새로운 건물을 새울 때 똑같은 함수로 처리힐 수 있다.

// function 함수이름(parameter1, parameter2...) { // 함수의 선언
//   // 실행코드...
//   return 반환값
// }

// 함수이름(argument1, argument2...) // 함수의 호출


//이렇게 선언하면 인부들이 투입된 상태는 아닌것 !! 실제로는 이대로 해라! 그냥 정의만 한 상태
function 땅다지기(삽, 인원){

  return `${삽}개의 삽을 가지고 ${인원}명 투입`;

}

// 이렇게 선언하면 인부들이 투입된 상태는 아닌겁니다! 실제로 이대로 일을 해라!하는 것은 '호출'을 하셔야 합니다. 이 부분은 '정의'부분이에요.
function 땅다지기(삽, 인원) {
  // 기능
  console.log(`${삽}개의 삽을 가지고 ${인원}명이 땅을 다진다!`)
  return '다져진 땅'
}

console.log(땅다지기(3 , 10)) //이렇게 해야 실행함 , ()->호툴버튼을 눌러야 실행
//이렇게 변수에 저장하면 휘발되지않고 저장된다
let 땅1 = 땅다지기(3 , 10)
let 땅2 = 땅다지기(5 , 10)
//추상화, 
console.log(땅1, 땅2)


////////////////
function 말뚝세우기(){

}
function 기초콘크리트(){

}
function 철근바인딩(){

}
function 기둥세우기(){

}
function 외벽내벽올리기(){

}function 지붕올리기(){


}
// 매우 중요 외우자
//파선아실 (파라미터는 선언, 아규먼트는 실제 값)